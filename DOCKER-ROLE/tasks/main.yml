---
# tasks file for Docker
#
# Install Docker based on OS family and create an Nginx container.

- name: Add Docker GPG key (Debian)
  apt_key:
    url: "{{ docker_gpg_key }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository (Debian)
  apt_repository:
    repo: "{{ docker_repo }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Docker (Debian)
  apt:
    update_cache: true
    name: docker-ce
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker YUM repository (RedHat)
  yum_repository:
    name: docker-ce
    baseurl: "{{ docker_baseurl }}"
    repo_gpgcheck: yes
    enabled: yes
    gpgcheck: yes
    gpgkey: "{{ docker_gpg_key }}"
    sslverify: yes
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
  when: ansible_os_family == "RedHat"

- name: Install Docker (RedHat)
  yum:
    name: docker-ce
    state: present
  when: ansible_os_family == "RedHat"

- name: Generate Docker daemon.json
  template:
    src: docker-daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: restart docker
  when: ansible_os_family in ["Debian", "RedHat"]

# Ensure Docker is started and enabled
- name: Ensure Docker service is started and enabled
  service:
    name: docker
    state: started
    enabled: yes
  when: ansible_os_family in ["Debian", "RedHat"]

# Create and start an Nginx container using Docker
- name: Create and start an Nginx container
  docker_container:
    name: nginx_container
    image: nginx:latest
    state: started  # Ensure the container is in the running state
    restart_policy: always  # Ensure the container restarts if it crashes
    ports:
      - "80:80"
    log_driver: "json-file"
    log_options:
      max-size: "10m"
      max-file: "3"
  when: ansible_os_family in ["Debian", "RedHat"]
